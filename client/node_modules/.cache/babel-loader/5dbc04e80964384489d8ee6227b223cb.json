{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Documents\\\\Projects\\\\COVID-Booking\\\\COVID-Booking\\\\client\\\\src\\\\components\\\\Form\\\\FormRegister.js\",\n    _s = $RefreshSig$();\n\n/*\r\n    FormRegister component adapted from: https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-up\r\n */\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { useForm, Controller } from 'react-hook-form'; // 3rd party library for handling forms\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { registerUser } from '../../actions/Authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(5)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n})); // Form validation Schema\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required'),\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters in length').max(50, 'Password must not exceed 50 characters in length'),\n  firstDose: Yup.date().notRequired(),\n  secondDose: Yup.date().notRequired()\n});\nexport default function SignUp() {\n  _s();\n\n  const classes = useStyles(); // Hook for authentication\n  // From react-hook-form library\n\n  const {\n    handleSubmit,\n    control,\n    setValue\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data)); // Remove this later\n    // Call method that sends data to the BE\n\n    registerUser(data); // Do some error handling -- What if the response code isn't 200\n  };\n\n  const [selectedFirstDoseDate, setSelectedFirstDoseDate] = useState(null);\n  const [selectedSecondDoseDate, setSelectedSecondDoseDate] = useState(null);\n\n  const handleFirstDoseDateChange = date => {\n    setSelectedFirstDoseDate(date);\n    setValue('firstDose', date, {\n      shouldValidate: true,\n      shouldDirty: true\n    });\n  };\n\n  const handleSecondDoseDateChange = date => {\n    setSelectedSecondDoseDate(date);\n    setValue('secondDose', date, {\n      shouldValidate: true,\n      shouldDirty: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"firstName\",\n              defaultValue: \"\",\n              render: ({\n                field,\n                fieldState: {\n                  error\n                }\n              }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                autoComplete: \"fname\",\n                name: \"firstName\",\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"First Name\",\n                autoFocus: true,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"lastName\",\n              defaultValue: \"\",\n              render: ({\n                field,\n                fieldState: {\n                  error\n                }\n              }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                autoComplete: \"lname\",\n                name: \"lastName\",\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"lastName\",\n                label: \"Last Name\",\n                autoFocus: true,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"email\",\n              defaultValue: \"\",\n              render: ({\n                field,\n                fieldState: {\n                  error\n                }\n              }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\",\n                autoFocus: true,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"password\",\n              defaultValue: \"\",\n              render: ({\n                field,\n                fieldState: {\n                  error\n                }\n              }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                autoComplete: \"current-password\",\n                name: \"password\",\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"password\",\n                type: \"password\",\n                label: \"Password\",\n                autoFocus: true,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \" Please select the date you received your vaccination dose(s) below. Omit if you haven't been vaccinated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"MM/dd/yyyy\",\n                margin: \"normal\",\n                id: \"firstDose\",\n                emptyLabel: \"Dose 1 Date\",\n                value: selectedFirstDoseDate,\n                onChange: handleFirstDoseDateChange,\n                disableFuture: \"true\",\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"MM/dd/yyyy\",\n                margin: \"normal\",\n                id: \"secondDose\",\n                emptyLabel: \"Dose 2 Date\",\n                value: selectedSecondDoseDate,\n                onChange: handleSecondDoseDateChange,\n                disableFuture: \"true\",\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/login\",\n              variant: \"body2\",\n              children: \"Already have an account? Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SignUp, \"KkT/lnuGDiHhbLDDNTYPz4KLOa0=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/jamie/Documents/Projects/COVID-Booking/COVID-Booking/client/src/components/Form/FormRegister.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormLabel","Link","Grid","LockOutlinedIcon","Typography","Container","DateFnsUtils","makeStyles","MuiPickersUtilsProvider","KeyboardDatePicker","useForm","Controller","yupResolver","Yup","registerUser","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginBottom","submit","validationSchema","object","shape","firstName","string","required","lastName","email","password","min","max","firstDose","date","notRequired","secondDose","SignUp","classes","handleSubmit","control","setValue","resolver","onSubmit","data","alert","JSON","stringify","selectedFirstDoseDate","setSelectedFirstDoseDate","selectedSecondDoseDate","setSelectedSecondDoseDate","handleFirstDoseDateChange","shouldValidate","shouldDirty","handleSecondDoseDateChange","field","fieldState","error","message"],"mappings":"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","sourcesContent":["/*\r\n    FormRegister component adapted from: https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-up\r\n */\r\nimport React, {useState} from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport 'date-fns';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {  MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { useForm, Controller } from 'react-hook-form';    // 3rd party library for handling forms\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport {registerUser} from '../../actions/Authenticate'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(5),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(5)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  // Form validation Schema\r\n  const validationSchema = Yup.object().shape(\r\n    {\r\n      firstName: Yup.string().required('First name is required'),\r\n      lastName: Yup.string().required('Last name is required'),\r\n      email: Yup.string().required('Email is required')\r\n                         .email('Email is invalid'),\r\n      password: Yup.string().required('Password is required')\r\n                            .min(6, 'Password must be at least 6 characters in length')\r\n                            .max(50, 'Password must not exceed 50 characters in length'),\r\n      firstDose: Yup.date().notRequired(),\r\n      secondDose: Yup.date().notRequired()\r\n    }\r\n  );\r\n\r\n  \r\n  export default function SignUp() {\r\n    const classes = useStyles();\r\n    // Hook for authentication\r\n\r\n    // From react-hook-form library\r\n    const { handleSubmit, control, setValue } = useForm({resolver: yupResolver(validationSchema)});\r\n\r\n    const onSubmit = data => {\r\n      alert(JSON.stringify(data));    // Remove this later\r\n      // Call method that sends data to the BE\r\n      registerUser(data);       // Do some error handling -- What if the response code isn't 200\r\n\r\n    };\r\n\r\n    \r\n    const [selectedFirstDoseDate, setSelectedFirstDoseDate] = useState(null);\r\n    const [selectedSecondDoseDate, setSelectedSecondDoseDate] = useState(null);\r\n\r\n    const handleFirstDoseDateChange = (date) => {\r\n      setSelectedFirstDoseDate(date);\r\n      setValue('firstDose', date, {shouldValidate: true, shouldDirty: true})\r\n    };\r\n\r\n    const handleSecondDoseDateChange = (date) => {\r\n      setSelectedSecondDoseDate(date);\r\n      setValue('secondDose', date, {shouldValidate: true, shouldDirty: true})\r\n    };\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Controller \r\n                  control={control}\r\n                  name=\"firstName\"\r\n                  defaultValue=\"\"\r\n                  render={({ field, fieldState: { error } }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      autoFocus\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                 <Controller \r\n                  control={control}\r\n                  name=\"lastName\"\r\n                  defaultValue=\"\"\r\n                  render={({ field, fieldState: { error } }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      autoComplete=\"lname\"\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      autoFocus\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller \r\n                  control={control}\r\n                  name=\"email\"\r\n                  defaultValue=\"\"\r\n                  render={({ field, fieldState: { error } }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      autoFocus\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller \r\n                  control={control}\r\n                  name=\"password\"\r\n                  defaultValue=\"\"\r\n                  render={({ field, fieldState: { error } }) => (\r\n                    <TextField\r\n                      {...field}\r\n                      autoComplete=\"current-password\"\r\n                      name=\"password\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      autoFocus\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormLabel> Please select the date you received your vaccination dose(s) below. Omit if you haven't been vaccinated.</FormLabel>\r\n              </Grid>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"firstDose\"\r\n                    emptyLabel=\"Dose 1 Date\"\r\n                    value={selectedFirstDoseDate}\r\n                    onChange={handleFirstDoseDateChange}\r\n                    disableFuture=\"true\"\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"secondDose\"\r\n                    emptyLabel=\"Dose 2 Date\"\r\n                    value={selectedSecondDoseDate}\r\n                    onChange={handleSecondDoseDateChange}\r\n                    disableFuture=\"true\"\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link href=\"/user/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}