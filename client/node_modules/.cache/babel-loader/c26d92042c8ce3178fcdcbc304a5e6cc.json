{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jamie\\\\Documents\\\\Projects\\\\COVID-Booking\\\\COVID-Booking\\\\client\\\\src\\\\components\\\\Form\\\\FormLogin.js\",\n    _s = $RefreshSig$();\n\n/*\r\n    FormLogin component adapted from: https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in \r\n */\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form'; // 3rd party library for handling forms\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { loginUser } from '../../actions/Authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(5)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters in length').max(50, 'Password must not exceed 50 characters in length')\n});\n\nfunction FormLogin({\n  user\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data)); // Remove this later\n    // Call the login function\n\n    loginUser(data); // Handle req that is not 200\n  };\n\n  const {\n    handleSubmit,\n    control\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: [user, \" Sign In\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"email\",\n          defaultValue: \"\",\n          render: ({\n            field,\n            fieldState: {\n              error\n            }\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            error: !!error,\n            helperText: error ? error.message : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"password\",\n          defaultValue: \"\",\n          render: ({\n            field,\n            fieldState: {\n              error\n            }\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            error: !!error,\n            helperText: error ? error.message : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"rememberMe\",\n          render: ({\n            field: {\n              value,\n              onChange\n            }\n          }) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: value,\n              onChange: onChange,\n              value: \"remember\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 28\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/register\",\n              variant: \"body2\",\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FormLogin, \"ic5NtPPmTyrSDZBInFSLgzrucFY=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = FormLogin;\nexport default FormLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"sources":["C:/Users/jamie/Documents/Projects/COVID-Booking/COVID-Booking/client/src/components/Form/FormLogin.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","LockOutlinedIcon","Typography","makeStyles","Container","useForm","Controller","yupResolver","Yup","loginUser","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginBottom","submit","validationSchema","object","shape","email","string","required","password","min","max","FormLogin","user","classes","onSubmit","data","alert","JSON","stringify","handleSubmit","control","resolver","field","fieldState","error","message","value","onChange"],"mappings":"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","sourcesContent":["/*\r\n    FormLogin component adapted from: https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in \r\n */\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { useForm, Controller } from 'react-hook-form';    // 3rd party library for handling forms\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport { loginUser } from '../../actions/Authenticate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(5),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(5)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().required('Email is required')\r\n            .email('Email is invalid'),\r\n  password: Yup.string().required('Password is required')\r\n            .min(6, 'Password must be at least 6 characters in length')\r\n            .max(50, 'Password must not exceed 50 characters in length')\r\n});\r\n\r\nfunction FormLogin({ user }) {\r\n    const classes = useStyles();\r\n\r\n    const onSubmit = data => {\r\n      alert(JSON.stringify(data));   // Remove this later\r\n      // Call the login function\r\n      loginUser(data);    // Handle req that is not 200\r\n    };\r\n\r\n    const { \r\n      handleSubmit, \r\n      control,\r\n    } = useForm({resolver: yupResolver(validationSchema)});\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {user} Sign In\r\n          </Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate>\r\n            <Controller \r\n              control={control}\r\n              name=\"email\"\r\n              defaultValue=\"\"\r\n              render={({ field, fieldState: { error } }) => (\r\n                <TextField\r\n                  {...field}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              )}\r\n            />\r\n            <Controller \r\n              control={control}\r\n              name=\"password\"\r\n              defaultValue=\"\"\r\n              render={({ field, fieldState: { error } }) => (\r\n                <TextField\r\n                  {...field}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              )}\r\n            />\r\n            <Controller\r\n              control={control}\r\n              name=\"rememberMe\"\r\n              render={({ field: { value, onChange } }) => (\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={value} onChange={onChange} value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              )}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link href=\"/user/register\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );  \r\n}\r\n\r\nexport default FormLogin;\r\n"]},"metadata":{},"sourceType":"module"}